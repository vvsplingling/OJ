### [704. 二分查找](https://leetcode-cn.com/problems/binary-search/)

递归

```c++
class Solution {
public:
    int search(vector<int>& nums, int target) {
        return BinarySearch(nums,0,nums.size()-1,target);
    }

    int BinarySearch(vector<int>& nums, int left, int right, int target){
        if(left>right)
            return -1;
        int mid=left+(right-left)/2;
        if(nums[mid]==target)
            return mid;
        else if(nums[mid]<target)
            return BinarySearch(nums,mid+1,right,target);
        else
            return BinarySearch(nums,left,mid-1,target);
    }
};
```



迭代

```c++
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left=0,right=nums.size()-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]<target)
                left=mid+1;
            else
                right=mid-1;
        }
        return -1;
    }
};
```

