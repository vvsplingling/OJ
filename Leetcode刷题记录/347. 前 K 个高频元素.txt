### [347. 前 K 个高频元素](https://leetcode-cn.com/problems/top-k-frequent-elements/)

```c++
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> m;
        for(int i=0;i<nums.size();++i)
            m[nums[i]]++;
        set<int> s(nums.begin(),nums.end());
        nums.assign(s.begin(),s.end());
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;  //小根堆
        for(int i=0;i<nums.size();++i){
            if(i<k)
                pq.push(pair<int,int>(m[nums[i]],nums[i]));
            else{
                if(m[nums[i]]<pq.top().first)
                    continue;
                else{
                    pq.pop();
                    pq.push(pair<int,int>(m[nums[i]],nums[i]));
                }
            }
        }
        vector<int> res;
        while(!pq.empty()){
            res.push_back(pq.top().second);
            pq.pop();
        }
        return res;
    }
};
```

